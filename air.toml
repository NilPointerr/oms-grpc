# Config file for Air (https://github.com/air-verse/air) in TOML format

# Working directory
root = "."
tmp_dir = "tmp"

[build]
# Array of commands to run before each build (can be empty or customized)
pre_cmd = ["echo 'Starting build process...' > pre_cmd.txt"]

# Command to build your Go project
cmd = "go build -o ./tmp/main /home/dev53/nilesh/oms-grpc/cmd/oms-api/main2.go"

# Array of commands to run after the build process
post_cmd = ["echo 'Build completed' > post_cmd.txt"]

# Binary output path
bin = "tmp/main"

# Full command to run after building
# You can set environment variables here if needed
full_bin = "./tmp/main"

# Arguments to pass to your Go binary (if needed)
args_bin = []

# Extensions to watch for changes
include_ext = ["go", "tpl", "tmpl", "html"]

# Directories to exclude from being watched
exclude_dir = ["assets", "tmp", "vendor", "frontend/node_modules"]

# Specify directories to include (if any)
include_dir = []

# Specify individual files to include (if any)
include_file = []

# Exclude test files from being watched
exclude_regex = ["_test\\.go"]

# Exclude unchanged files
exclude_unchanged = true

# Follow symlinks for directories
follow_symlink = true

# Path to the log file
log = "air.log"

# Polling options (use fsnotify by default)
poll = false
poll_interval = 500  # milliseconds

# Prevent triggering build on too frequent file changes
delay = 0  # milliseconds

# Stop running the old binary if there are build errors
stop_on_error = true

# Automatically rerun binary (you can turn this off if needed)
rerun = true

# Delay after each execution
rerun_delay = 500

[log]
# Show log time
time = false

# Show all logs (main, watcher, build, and runner logs)
main_only = false

# Enable or disable logging
silent = false

[color]
# Customize the colors of logs in the terminal
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[misc]
# Delete the tmp directory on exit
clean_on_exit = true

[screen]
# Clear the terminal screen on rebuild
clear_on_rebuild = true

# Keep the scrollback history visible
keep_scroll = true

[proxy]
# Enable live-reloading through a proxy server on the browser
enabled = true
proxy_port = 8090
app_port = 8080
