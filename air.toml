# air.toml for hot reloading Go project

# Working directory
root = "."

# Temporary directory to store compiled binaries
tmp_dir = "tmp"

# Commands before building (if necessary)
[build]
pre_cmd = ["echo 'Starting build process...'"]

# Go build command to compile the Go project
cmd = "go build -o ./tmp/main ./cmd/oms-api/main.go"  # Ensure it builds from main2.go

# Commands after build (if needed)
post_cmd = ["echo 'Build completed'"]

# Path to the binary output
bin = "tmp/main"

# Full command to run the binary after building
full_bin = "./tmp/main"

# Arguments to pass to your binary (if any)
args_bin = []

# Extensions to watch for changes
include_ext = ["go", "tpl", "tmpl", "html"]

# Directories to exclude from being watched
exclude_dir = ["assets", "tmp", "vendor", "frontend/node_modules"]

# Specify directories to include (optional)
include_dir = []

# Specify individual files to include (optional)
include_file = []

# Exclude test files from being watched
exclude_regex = ["_test\\.go"]

# Stop if there are build errors
stop_on_error = true

# Automatically rerun the binary after each build
rerun = true

# Delay after each execution (in ms)
rerun_delay = 500

# Log settings
[log]
time = false
silent = false
