/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: oms_items.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = require('./oms_items_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.omsItemServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.omsItemServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ItemRequest,
 *   !proto.ItemResponse>}
 */
const methodDescriptor_omsItemService_CreateItem = new grpc.web.MethodDescriptor(
  '/omsItemService/CreateItem',
  grpc.web.MethodType.UNARY,
  proto.ItemRequest,
  proto.ItemResponse,
  /**
   * @param {!proto.ItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ItemResponse.deserializeBinary
);


/**
 * @param {!proto.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.omsItemServiceClient.prototype.createItem =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/omsItemService/CreateItem',
      request,
      metadata || {},
      methodDescriptor_omsItemService_CreateItem,
      callback);
};


/**
 * @param {!proto.ItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.omsItemServicePromiseClient.prototype.createItem =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/omsItemService/CreateItem',
      request,
      metadata || {},
      methodDescriptor_omsItemService_CreateItem);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetItemRequest,
 *   !proto.ItemResponse>}
 */
const methodDescriptor_omsItemService_GetItemById = new grpc.web.MethodDescriptor(
  '/omsItemService/GetItemById',
  grpc.web.MethodType.UNARY,
  proto.GetItemRequest,
  proto.ItemResponse,
  /**
   * @param {!proto.GetItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ItemResponse.deserializeBinary
);


/**
 * @param {!proto.GetItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.omsItemServiceClient.prototype.getItemById =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/omsItemService/GetItemById',
      request,
      metadata || {},
      methodDescriptor_omsItemService_GetItemById,
      callback);
};


/**
 * @param {!proto.GetItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.omsItemServicePromiseClient.prototype.getItemById =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/omsItemService/GetItemById',
      request,
      metadata || {},
      methodDescriptor_omsItemService_GetItemById);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.EmptyRequest,
 *   !proto.GetAllItemResponse>}
 */
const methodDescriptor_omsItemService_GetAllItems = new grpc.web.MethodDescriptor(
  '/omsItemService/GetAllItems',
  grpc.web.MethodType.UNARY,
  proto.EmptyRequest,
  proto.GetAllItemResponse,
  /**
   * @param {!proto.EmptyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.GetAllItemResponse.deserializeBinary
);


/**
 * @param {!proto.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.GetAllItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.GetAllItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.omsItemServiceClient.prototype.getAllItems =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/omsItemService/GetAllItems',
      request,
      metadata || {},
      methodDescriptor_omsItemService_GetAllItems,
      callback);
};


/**
 * @param {!proto.EmptyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.GetAllItemResponse>}
 *     Promise that resolves to the response
 */
proto.omsItemServicePromiseClient.prototype.getAllItems =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/omsItemService/GetAllItems',
      request,
      metadata || {},
      methodDescriptor_omsItemService_GetAllItems);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.UpdateItemRequest,
 *   !proto.ItemResponse>}
 */
const methodDescriptor_omsItemService_UpdateItemById = new grpc.web.MethodDescriptor(
  '/omsItemService/UpdateItemById',
  grpc.web.MethodType.UNARY,
  proto.UpdateItemRequest,
  proto.ItemResponse,
  /**
   * @param {!proto.UpdateItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ItemResponse.deserializeBinary
);


/**
 * @param {!proto.UpdateItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.omsItemServiceClient.prototype.updateItemById =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/omsItemService/UpdateItemById',
      request,
      metadata || {},
      methodDescriptor_omsItemService_UpdateItemById,
      callback);
};


/**
 * @param {!proto.UpdateItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ItemResponse>}
 *     Promise that resolves to the response
 */
proto.omsItemServicePromiseClient.prototype.updateItemById =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/omsItemService/UpdateItemById',
      request,
      metadata || {},
      methodDescriptor_omsItemService_UpdateItemById);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.DeleteItemRequest,
 *   !proto.DeleteItemResponse>}
 */
const methodDescriptor_omsItemService_DeleteItemById = new grpc.web.MethodDescriptor(
  '/omsItemService/DeleteItemById',
  grpc.web.MethodType.UNARY,
  proto.DeleteItemRequest,
  proto.DeleteItemResponse,
  /**
   * @param {!proto.DeleteItemRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.DeleteItemResponse.deserializeBinary
);


/**
 * @param {!proto.DeleteItemRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.DeleteItemResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.DeleteItemResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.omsItemServiceClient.prototype.deleteItemById =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/omsItemService/DeleteItemById',
      request,
      metadata || {},
      methodDescriptor_omsItemService_DeleteItemById,
      callback);
};


/**
 * @param {!proto.DeleteItemRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.DeleteItemResponse>}
 *     Promise that resolves to the response
 */
proto.omsItemServicePromiseClient.prototype.deleteItemById =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/omsItemService/DeleteItemById',
      request,
      metadata || {},
      methodDescriptor_omsItemService_DeleteItemById);
};


module.exports = proto;

