syntax= "proto3";
option go_package ="./protobuf";


message EmptyRequestUser{

}
// User message represents a user in the system
message User {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string password = 4; // This can be a hashed password or a null field
    string created_at = 5;
    string updated_at = 6;
    string deleted_at = 7; // This can be a timestamp or a null field
}

// CreateUserRequest message is used to create a new user
message CreateUserRequest {
    string name = 1;
    string email = 2;
    string password = 3;
}

// UpdateUserRequest message is used to update an existing user
message UpdateUserRequest {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string password = 4; // This can be a hashed password or a null field
}

// GetUserRequest message is used to request a user by ID
message GetUserRequest {
    int32 user_id = 1;
}

// DeleteUserRequest message is used to delete a user by ID
message DeleteUserRequest {
    int32 user_id = 1;
}

// GetAllUsersResponse message is used to return all users
message GetAllUsersResponse {
    repeated User users = 1;
}

// CreateUserResponse message is the response after creating a user
message CreateUserResponse {
    User user = 1;
}


// DeleteUserResponse message is the response after deleting a user
message DeleteUserResponse {
    string message = 1; // Message indicating whether the user was deleted or not
}



// ItemResponse represents an item in an order
message ItemResponseu {
    int32 item_id = 1;
    int32 quantity = 2;
    double price = 3;
}

// OrderResponse represents the order details for a user
message OrderResponseu {
    int32 id = 1;
    double total_price = 2;
    string status = 3;
    double final_price = 4;
    repeated ItemResponseu items = 5; // List of items in the order
}

// UserOrderResponse represents the response for a user with their orders
message UserOrderResponse {
    int32 id = 1;
    string name = 2;
    string email = 3;
    repeated OrderResponseu order_response = 4; // List of orders for the user
    string created_at = 5; // Use string for date to avoid dealing with different timestamp formats
    string updated_at = 6;
    string deleted_at = 7; // Optional field for soft deletes (can be null)
}


message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
}

// The UserService service allows CRUD operations on users
service UserService {
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc CreateUser (CreateUserRequest) returns (User);
    rpc GetUserById (GetUserRequest) returns (User);
    rpc GetAllUsers (EmptyRequestUser) returns (GetAllUsersResponse);
    rpc UpdateUserById (UpdateUserRequest) returns (User);
    rpc DeleteUserById (DeleteUserRequest) returns (DeleteUserResponse);
    rpc GetUserOrdersByUserId (GetUserRequest) returns (UserOrderResponse);
}